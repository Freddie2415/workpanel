// login_and_stay.js ‚Äî —Å–∫—Ä—ã—Ç—ã–π (headless) –ª–æ–≥–∏–Ω + –≤–∏–¥–∏–º—ã–π –±—Ä–∞—É–∑–µ—Ä
// ------------------------------------------------------------------
// –°–∫—Ä–∏–ø—Ç —Å–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç ¬´–Ω–µ–≤–∏–¥–∏–º—ã–π¬ª headless‚Äë–ª–æ–≥–∏–Ω, —Å–æ—Ö—Ä–∞–Ω—è—è –∫—É–∫–∏ –≤
// –æ–±—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å, –∞ –∑–∞—Ç–µ–º –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π Chromium —Å —Ç–µ–º –∂–µ
// –ø—Ä–æ—Ñ–∏–ª–µ–º. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É /dispatch,
// –Ω–µ –∑–∞–º–µ—á–∞—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤—Ö–æ–¥–∞.
// ------------------------------------------------------------------
// 1. npm i puppeteer dotenv
// 2. .env:
//        SITE_EMAIL=you@example.com
//        SITE_PASS=super_secret
// 3. node login_and_stay.js
// ------------------------------------------------------------------

require('dotenv').config();
const puppeteer = require('puppeteer');
const path = require('path');

const SITE = process.env.REMOTE_BASE_URL;            // <-- –≤–∞—à –¥–æ–º–µ–Ω
const EMAIL = process.env.USERNAME_FIELD;
const PASS = process.env.PASSWORD_FIELD;
const PROFILE_DIR = path.resolve('user_data'); // –æ–±—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è headless+GUI

//--------------------------------------------------------------------
// 1. headlessLogin() ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ ¬´–Ω–µ–≤–∏–¥–∏–º–æ–º¬ª Chromium, —á—Ç–æ–±—ã
//    –æ–±–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —ç—Ç–æ–≥–æ –Ω–µ –≤–∏–¥–∏—Ç.
//--------------------------------------------------------------------
async function headlessLogin() {
    const browser = await puppeteer.launch({
        headless: 'new',                        // headless ‚â•118 (–±–µ—Å—à—É–º–Ω–æ)
        userDataDir: PROFILE_DIR,
        args: ['--no-sandbox', '--disable-setuid-sandbox']
    });
    const page = await browser.newPage();

    // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å /dispatch ‚Äî –µ—Å–ª–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏—Ç –Ω–∞ /login, –ª–æ–≥–∏–Ω–∏–º—Å—è
    await page.goto(`${SITE}/dispatch`, {waitUntil: 'networkidle2'});
    if (page.url().includes('/login')) {
        console.log('[headless] –¢—Ä–µ–±—É–µ—Ç—Å—è –ª–æ–≥–∏–Ω‚Ä¶');
        await page.type('input[data-cy="loginEmailField"]', EMAIL, {delay: 20});
        await page.type('input[data-cy="loginPasswordField"]', PASS, {delay: 20});
        await Promise.all([
            page.click('button[data-cy="signInBtn"]'),
            page.waitForNavigation({waitUntil: 'networkidle2'})
        ]);
        console.log('[headless] –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –∫—É–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
    } else {
        console.log('[headless] –£–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã, –ª–æ–≥–∏–Ω –Ω–µ –Ω—É–∂–µ–Ω');
    }

    await browser.close();
}

//--------------------------------------------------------------------
// 2. launchVisible() ‚Äî –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π Chromium —Å —Ç–µ–º –∂–µ
//    userDataDir, –ø–æ—ç—Ç–æ–º—É —Å–µ—Å—Å–∏—è —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∏–¥–∏—Ç
//    —Ç–æ–ª—å–∫–æ –≥–æ—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É /dispatch.
//--------------------------------------------------------------------
async function launchVisible() {
    const browser = await puppeteer.launch({
        headless: false,
        userDataDir: PROFILE_DIR,
        defaultViewport: null,                  // —É–±–∏—Ä–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π viewport
        args: [
            '--no-sandbox',
            '--disable-setuid-sandbox',
            '--start-maximized'                  // –æ–∫–Ω–æ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
        ]
    });

    const [page] = await browser.pages();
    await page.goto(`${SITE}/dispatch`, {waitUntil: 'networkidle2'});
    console.log('üöÄ –í–∏–¥–∏–º—ã–π –±—Ä–∞—É–∑–µ—Ä –≥–æ—Ç–æ–≤. –ó–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–æ, —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–∫—Ä–∏–ø—Ç.');

    // –î–µ—Ä–∂–∏–º –ø—Ä–æ—Ü–µ—Å—Å –∂–∏–≤—ã–º, –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–∫—Ä–æ–µ—Ç –±—Ä–∞—É–∑–µ—Ä
    await new Promise(() => {
    });
}

//--------------------------------------------------------------------
// 3. –ì–ª–∞–≤–Ω—ã–π –ø–æ—Ç–æ–∫: —Å–Ω–∞—á–∞–ª–∞ headless‚Äë–ª–æ–≥–∏–Ω, –ø–æ—Ç–æ–º –≤–∏–¥–∏–º—ã–π –±—Ä–∞—É–∑–µ—Ä
//--------------------------------------------------------------------
(async () => {
    try {
        await headlessLogin();  // –Ω–µ–≤–∏–¥–∏–º—ã–π –≤—Ö–æ–¥
        await launchVisible();  // —Ä–∞–±–æ—á–∏–π GUI-–±—Ä–∞—É–∑–µ—Ä
    } catch (e) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', e);
        process.exit(1);
    }
})();
